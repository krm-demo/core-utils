This particular version of the project `[[${mh.currentProjectVersion}]]` is an _PUBLIC_-release version, which consists of
- major version `[[${mh.majorVersion}]]` (that corresponds to minimal supported version of JDK);
- minor version `[[${mh.minorVersion}]]` (the ordinal number of _PUBLIC_-release);

> [!TIP]
> TODO: check whether this _PUBLIC_-release is the latest one and render the warning if it's not

## Usage of `[[${mh.projectArtifact}]]`-library

> [!NOTE]
> The _PUBLIC_-release version has only 2 integer parts (_major_ and _minor_) parts **without** _incremental_ part and suffix `-SNAPSHOT`.
> It's built and deployed into [GitHub Packages](https://docs.github.com/en/packages/learn-github-packages/introduction-to-github-packages)
> artifactory as a result of manual execution of GitHub workflow [`release-public`]([[${github.event.repository.html_url}]]/actions/workflows/release-public.yml).

This version is deployed into public [maven central repository](https://central.sonatype.com/) - so, it's available for usage
without additional downloading steps or local builds. As for Java-Doc it's either available at [( ${gbh.badgeLatestPublicJavaDocMD} )]
or will be automatically downloaded by your favorite IDE.

But in order your maven/gradle project or jbang-script to use `[[${mh.projectArtifact}]]`-library
you must declare it as dependency in the way described below.

### [Maven](https://maven.apache.org/)
Dependencies for projects that are using [Apache Maven](https://maven.apache.org/) as a build-tool 
could be declared in `pom.xml` file in following way:
- for main-source dependencies:
    ```XML
        <dependency>
            <groupId>[[${mavenProps.get("maven-project.group")}]]</groupId>
            <artifactId>[[${mavenProps.get("maven-project.artifact")}]]</artifactId>
            <version>[[${mavenProps.get("maven-project.version")}]]</artifactId>
        </dependency>
    ```
- for test-source dependencies:
    ```XML
        <dependency>
            <groupId>[[${mavenProps.get("maven-project.group")}]]</groupId>
            <artifactId>[[${mavenProps.get("maven-project.artifact")}]]</artifactId>
            <version>[[${mavenProps.get("maven-project.version")}]]</artifactId>
            <scope>test</scope>
        </dependency>
    ```

### [Gradle](https://gradle.org/)
Projects that use [**Gradle** Build Tool](https://gradle.org/) should declare the dependencies 
in either `build.gradle` or `build.gradle.kts` like following: 
```Gradle
    // for main-source implementation dependencies:
    implementation("[[${mavenProps.get("maven-project.group")}]]:[[${mavenProps.get("maven-project.artifact")}]]:[[${mavenProps.get("maven-project.version")}]]")
    . . . . . . . . . . . . . .
    // for test-source implementation dependencies:
    testImplementation("[[${mavenProps.get("maven-project.group")}]]:[[${mavenProps.get("maven-project.artifact")}]]:[[${mavenProps.get("maven-project.version")}]]")
```

### [JBang](https://www.jbang.dev/)
If you don't have [JBang](https://www.jbang.dev/) installed - it's very easy to do
either following by [instructions at their site](https://www.jbang.dev/download/)
or using [sdkman](https://sdkman.io/sdks/jbang/). The easiest way to verify that
both [JBang](https://www.jbang.dev/) and **`[[${mavenProps.get("maven-project.artifact")}]]`**-library
are properly installed is to execute following command:

```bash
...> jbang [[${mavenProps.get("maven-project.group")}]]:[[${mavenProps.get("maven-project.artifact")}]]:[[${mavenProps.get("maven-project.version")}]]
This is a Main-class of 'core-utils' library (just a test message here)
```
You must see quite the same output as above. The versions and other detailed information could also be verified in such way.

Then you can create your own jbang-scripts using following examples:
- JBang-script to see environment variables
- JBang-script to see Java system-properties
- JBang-script to see the detailed information of CLASSPATH at runtime
- ... some other very useful and helpful scripts ...
-

---
> [!TIP]
> TODO: examples to be provided... (maybe specific for _PUBLIC_-releases)
---


name: on-main-push
run-name: on-main-push into ${{ github.ref }} â„–${{ github.run_number }}

permissions:
  contents: write
  packages: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_run:
    workflows: ["release-internal"]
    types: [completed]
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout the 'main'-branch of repo '${{ github.ref }}' into './main-branch'"
        uses: actions/checkout@v4
        with:
          ref: main
          path: main-branch
          fetch-depth: 0

      - name: "Set up JDK 25 (Amazon Corretto)"
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'corretto'
          check-latest: true
          cache: 'maven'
          cache-dependency-path: main-branch/pom.xml

      - name: "Setup JBang"
        uses: jbangdev/setup-jbang@main

      - name: "Demonstrate the basic remote JBang's script 'properties@jbangdev'"
        run: jbang properties@jbangdev 'java.v' 'java.r' 'java.s' 'sun.*' 'user.*'

      - name: "Dump Environment-Variables into '.github/th-vars'-dir"
        run: |
          # dump the output of './src/scripts/jbang/DumpEnvVars.java' into JSON-file
          cd main-branch
          # jbang --quiet src/scripts/jbang/DumpEnvVars.java
          jbang --quiet src/scripts/jbang/DumpEnvVars.java > .github/th-vars/var-envVars.json

      - name: "Dump Java System-Properties into '.github/th-vars'-dir"
        run: |
          # dump the output of './src/scripts/jbang/DumpSysProps.java' into JSON-file
          cd main-branch
          # jbang --quiet src/scripts/jbang/DumpSysProps.java
          jbang --quiet src/scripts/jbang/DumpSysProps.java > .github/th-vars/var-sysProps.json

      - name: "Dump Git-Hub context into '.github/th-vars'-dir"
        run: |
          # dump the value of {{ github }} into JSON-file
          cd main-branch
          echo '${{ toJson(github) }}' > .github/th-vars/var-github.json

      - name: "Dump 'secrets' context into '.github/th-vars'-dir"
        run: |
          # dump the value of {{ secrets }} into JSON-file
          cd main-branch
          echo '${{ toJson(secrets) }}' > .github/th-vars/var-secrets.json

      - name: "Perform the build and install using 'Apache Maven'"
        run: |
          # build and install to local maven repository
          cd main-branch
          echo "Current directory is $(pwd)"
          mvn -B clean install
          echo "~~~~~~~~~~~~~ ( dump the content of './target/' into summary ) ~~~~~~~~~~~~~"
          echo -e "the result of maven-build (content of \`./target\` directory):\n\`\`\`bash\n$(ls -laxo "./target")\n\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: "Checkout the 'gh-pages'-branch of repo '${{ github.ref }}' into './gh-pages-branch'"
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-branch
          fetch-depth: 0

      - name: "Copy the result of 'javadoc' MOJOs and the output of 'git-log' from 'main-branch' to './gh-pages-branch'"
        run: |
          cd main-branch
          git log --oneline > ../gh-pages-branch/git-log.txt
          echo -e "the content of file '$(realpath ../gh-pages-branch/git-log.txt)':\n$(cat ../gh-pages-branch/git-log.txt)"
          # going to extract the file-slug (basename without extension) of a target JAR-file
          # and use it as a name of the destination directory to copy the generated Java-Doc
          JAR_FILE_NAME=$(find "./target/" -name "core*.jar" ! -name "*javadoc.jar" ! -name "*sources.jar" -exec basename {} \;)
          echo "... going to re-write the content of folder '$(realpath ../gh-pages-branch/${JAR_FILE_NAME%.*})' ..."
          rm -rf ../gh-pages-branch/${JAR_FILE_NAME%.*}
          cp -r target/reports/apidocs/ ../gh-pages-branch/${JAR_FILE_NAME%.*}
          echo "JAR_FILE_NAME=$JAR_FILE_NAME"
          tree ../gh-pages-branch

      - name: "Commit and push the content 'gh-pages-branch' (togther with some test text-files)"
        run: |
          # build and install to local maven repository
          echo "created by GitHub-Workflow '$GITHUB_WORKFLOW' action #$GITHUB_RUN_NUMBER at $(date)" >> gh-pages-branch/a.txt
          cd gh-pages-branch
          git config user.name github-actions
          git config user.email github-actions@github.com
          echo "~~~~~~~~~~~~~ ( 1 ) ~~~~~~~~~~~~~"
          git remote -v
          echo "~~~~~~~~~~~~~ ( 2 ) ~~~~~~~~~~~~~"
          git config --list
          echo "~~~~~~~~~~~~~ ( 3 ) ~~~~~~~~~~~~~"
          ls -laxo
          echo "~~~~~~~~~~~~~ ( 4 ) ~~~~~~~~~~~~~"
          git add .
          echo "~~~~~~~~~~~~~ ( 5 ) ~~~~~~~~~~~~~"
          git status
          echo "~~~~~~~~~~~~~ ( 6 ) ~~~~~~~~~~~~~"
          git commit -m "add the test text-file a.txt as a result of GitHub-Workflow '$GITHUB_WORKFLOW' #$GITHUB_RUN_NUMBER"
          echo "~~~~~~~~~~~~~ ( 7 ) ~~~~~~~~~~~~~"
          git push
          echo "~~~~~~~~~~~~~ ( 8 )~~~~~~~~~~~~~~"
          git log --oneline
          echo "~~~~~~~~~~~~~ ( 9 )~~~~~~~~~~~~~~"
          echo "That's it "'!!!'




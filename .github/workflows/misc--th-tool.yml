name: th-tool
run-name: ${{ github.actor }} has executed 'misc--th-tool.yml' â„–${{ github.run_number }}
on: workflow_dispatch

jobs:

  th-tool:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the latest version of repo in '${{ github.ref }}'"
        uses: actions/checkout@v4

      - name: "Set up JDK 25 (Amazon Corretto)"
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'corretto'
          check-latest: true
          cache: 'maven'
          cache-dependency-path: pom.xml

      - name: "Setup JBang"
        uses: jbangdev/setup-jbang@main
      - run: jbang properties@jbangdev 'java.v' 'java.r' 'java.s' 'sun.*' 'user.*'

      - name: "Dump Environment-Variables into '.github/th-vars'-dir"
        run: |
          # dump the output of './src/scripts/jbang/DumpEnvVars.java' into JSON-file
          # jbang --quiet src/scripts/jbang/DumpEnvVars.java
          jbang --quiet src/scripts/jbang/DumpEnvVars.java > .github/th-vars/var-envVars.json

      - name: "Dump Java System-Properties into '.github/th-vars'-dir"
        run: |
          # dump the output of './src/scripts/jbang/DumpSysProps.java' into JSON-file
          # jbang --quiet src/scripts/jbang/DumpSysProps.java
          jbang --quiet src/scripts/jbang/DumpSysProps.java > .github/th-vars/var-sysProps.json

      - name: "Dump Git-Hub context into '.github/th-vars'-dir"
        run: |
          # dump the value of {{ github }} into JSON-file
          echo '${{ toJson(github) }}' > .github/th-vars/var-github.json

      - name: "Dump 'secrets' context into '.github/th-vars'-dir"
        run: |
          # dump the value of {{ secrets }} into JSON-file
          echo '${{ toJson(secrets) }}' > .github/th-vars/var-secrets.json

      - name: "Process the template '.github/th-templates/Usage.md.th' via 'th-tool':"
        run: .github/th-tool.sh process .github/th-templates/Usage.md.th --output $GITHUB_STEP_SUMMARY

      - name: "Examples of simple expressions by 'th-tool':"
        run: |
          .github/th-tool.sh eval 1+1 \* 3+4 \* 5 --output ./target/expr-result-00.txt
          .github/th-tool.sh eval xxx.get$'\'("property-one")\'' --output ./target/expr-result-01.txt
          .github/th-tool.sh eval xxx.get$'\'("property-num")\'' --output ./target/expr-result-02.txt
          .github/th-tool.sh eval $'\'"la-la-la"\'' --output ./target/expr-result-03.txt
          .github/th-tool.sh eval $'\'"la-la-la  1212   456 7\nthe second line"\'' --output ./target/expr-result-04.txt

          echo "---" >> $GITHUB_STEP_SUMMARY

          echo "#### some simple expressions:"
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "1+2 * 3+4 * 5 = $(cat ./target/expr-result-00.txt)" >> $GITHUB_STEP_SUMMARY
          echo "xxx.property-one = $(cat ./target/expr-result-01.txt)" >> $GITHUB_STEP_SUMMARY
          echo "xxx.property-num = $(cat ./target/expr-result-02.txt)" >> $GITHUB_STEP_SUMMARY
          echo "\"la-la-la\" = $(cat ./target/expr-result-03.txt)" >> $GITHUB_STEP_SUMMARY
          echo -e "\necho \"la-la-la  1212   456 7\nthe second line\":\n$(cat ./target/expr-result-04.txt)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: "Examples of maven-versions expressions by 'th-tool':"
        run: |
          .github/th-tool.sh eval mavenProps.get$'\'("parsedVersion.majorVersion")\'' --output ./target/result-majorVersion.txt
          .github/th-tool.sh eval mavenProps.get$'\'("parsedVersion.minorVersion")\'' --output ./target/result-minorVersion.txt
          .github/th-tool.sh eval mavenProps.get$'\'("parsedVersion.incrementalVersion")\'' --output ./target/result-incrementalVersion.txt
          .github/th-tool.sh eval mavenProps.get$'\'("parsedVersion.qualifier")\'' --output ./target/result-qualifierVersion.txt
          .github/th-tool.sh eval mavenProps.get$'\'("maven-project.version")\'' --output ./target/result-projectVersion.txt
          .github/th-tool.sh eval mavenProps.get$'\'("parsedVersion.nextMinorVersion")\'' --output ./target/result-nextMinorVersion.txt
          .github/th-tool.sh eval mavenProps.get$'\'("parsedVersion.nextIncrementalVersion")\'' --output ./target/next-nextIncrementalVersion.txt

          CURRENT_VERSION=$(cat ./target/result-projectVersion.txt)
          INTERNAL_RELEASE_VERSION=$(cat ./target/result-majorVersion.txt).$(cat ./target/result-minorVersion.txt).$(cat ./target/result-nextIncrementalVersion.txt)
          PUBLIC_RELEASE_VERSION=$(cat ./target/result-majorVersion.txt).$(cat ./target/result-nextMinorVersion.txt)
          NEXT_VERSION=$(cat ./target/result-projectVersion.txt).$(cat ./target/result-nextMinorVersion.txt).0-$(cat ./target/result-qualifier.txt)

          echo "#### Values of current, release and next versions" >> $GITHUB_STEP_SUMMARY
          echo "| Env-Var | Value | Description |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| \`CURRENT_VERSION\` | \`$CURRENT_VERSION\` | Current version of project in `pom.xml` |" >> $GITHUB_STEP_SUMMARY
          echo "| \`INTERNAL_RELEASE_VERSION\` | \`INTERNAL_RELEASE_VERSION\` | The version of next internal release |" >> $GITHUB_STEP_SUMMARY
          echo "| \`PUBLIC_RELEASE_VERSION\` | \`PUBLIC_RELEASE_VERSION\` | The version of next public release |" >> $GITHUB_STEP_SUMMARY
          echo "| \`NEXT_VERSION\` | \`NEXT_VERSION\` | The next development version |" >> $GITHUB_STEP_SUMMARY
